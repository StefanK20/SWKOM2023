/*
 * PaperlessREST
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DocumentTypesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DocumentTypesApiTests : IDisposable
    {
        private DocumentTypesApi instance;

        public DocumentTypesApiTests()
        {
            instance = new DocumentTypesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DocumentTypesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DocumentTypesApi
            //Assert.IsType<DocumentTypesApi>(instance);
        }

        /// <summary>
        /// Test CreateDocumentType
        /// </summary>
        [Fact]
        public void CreateDocumentTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewDocumentType? newDocumentType = null;
            //instance.CreateDocumentType(newDocumentType);
        }

        /// <summary>
        /// Test DeleteDocumentType
        /// </summary>
        [Fact]
        public void DeleteDocumentTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //instance.DeleteDocumentType(id);
        }

        /// <summary>
        /// Test GetDocumentTypes
        /// </summary>
        [Fact]
        public void GetDocumentTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetDocumentTypes();
        }

        /// <summary>
        /// Test UpdateDocumentType
        /// </summary>
        [Fact]
        public void UpdateDocumentTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //DocumentType? documentType = null;
            //instance.UpdateDocumentType(id, documentType);
        }
    }
}
