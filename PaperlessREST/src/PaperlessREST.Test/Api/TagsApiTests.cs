/*
 * PaperlessREST
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TagsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TagsApiTests : IDisposable
    {
        private TagsApi instance;

        public TagsApiTests()
        {
            instance = new TagsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TagsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TagsApi
            //Assert.IsType<TagsApi>(instance);
        }

        /// <summary>
        /// Test CreateTag
        /// </summary>
        [Fact]
        public void CreateTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewTag? newTag = null;
            //instance.CreateTag(newTag);
        }

        /// <summary>
        /// Test DeleteTag
        /// </summary>
        [Fact]
        public void DeleteTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //instance.DeleteTag(id);
        }

        /// <summary>
        /// Test GetTags
        /// </summary>
        [Fact]
        public void GetTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetTags();
        }

        /// <summary>
        /// Test UpdateTag
        /// </summary>
        [Fact]
        public void UpdateTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //DocTag? docTag = null;
            //instance.UpdateTag(id, docTag);
        }
    }
}
